name: Generate AWS Resource Governor Template

on:
  push:
    branches:
      - main
    paths:
      - 'lambda_function.py'
      - 'aws-resource-governor.tpl.yaml'
      - 'policies/*.json'

jobs:
  generate-template:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate CloudFormation template with embedded code and policies
        run: |
          # Copy template to final file
          cp aws-resource-governor.tpl.yaml aws-resource-governor.yaml
          
          # Embed Lambda function code
          echo "Embedding Lambda function code..."
          yq eval '.Resources.ResourceGovernorLambda.Properties.Code.ZipFile = load_str("lambda_function.py")' -i aws-resource-governor.yaml
          
          # Initialize policies array
          yq eval '.Resources.RestrictedIAMGroup.Properties.Policies = []' -i aws-resource-governor.yaml
          
          # Add each policy file
          for policy_file in policies/*.json; do
            if [ -f "$policy_file" ]; then
              policy_name=$(basename "$policy_file" .json)
              echo "Adding policy: $policy_name"
              
              yq eval '.Resources.RestrictedIAMGroup.Properties.Policies += [{"PolicyName": "'$policy_name'", "PolicyDocument": load("'$policy_file'")}]' -i aws-resource-governor.yaml
            fi
          done
          
          echo "âœ… Successfully generated aws-resource-governor.yaml"
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Commit and push changes
        run: |
          git add aws-resource-governor.yaml
          git commit -m "Auto-generate: Create aws-resource-governor.yaml from template"
          
          # Push to the main branch
          git push origin HEAD:main
      
      